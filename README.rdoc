= RMU SESSION 6 EXERCISE 3

This is my experiment to explore the Ripper library.

It's a Ruby file comparator, a tool that given 2 Ruby files, it will tell if they have the same structure. For example:

File 1

  class Person
    def initialize(name)
      @name = name
    end

    def first_name
      @name.split(" ")[0]
    end

    def last_name
      @name.split(" ")[1]
    end
  end

File 2

  # A comment that will be ignored
  # by the parser.
  # This file is similar in structure to code1a.rb
  class Guy
    def initialize(his_name)
      @his_name       = his_name
    end

    def his_first_name

      @his_name.split(" ")[0] # this comment is also ignored

    end

    def his_last_name

      @his_name.split(" ")[1] # and so is this one

    end
  end

These 2 Ruby files may look different but they're really the same code, naming things differently, and with different indentation and comments.

When reducing to its simple structure, we can see they are really the same:

  [:program, [:stmts_add, [:stmts_new], [:class, [:const_ref, [:@const, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]]], nil, [:bodystmt, [:stmts_add, [:stmts_add, [:stmts_add, [:stmts_new], [:def, [:@ident, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]], [:paren, [:params, [[:@ident, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]]], nil, nil, nil, nil]], [:bodystmt, [:stmts_add, [:stmts_new], [:assign, [:var_field, [:@ivar, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]]], [:var_ref, [:@ident, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]]]]], nil, nil, nil]]], [:def, [:@ident, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]], [:params, nil, nil, nil, nil, nil], [:bodystmt, [:stmts_add, [:stmts_new], [:aref, [:method_add_arg, [:call, [:var_ref, [:@ivar, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]]], :".", [:@ident, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]]], [:arg_paren, nil]], [:args_add_block, [:args_add, [:args_new], [:@int, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]]], false]]], nil, nil, nil]]], [:def, [:@ident, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]], [:params, nil, nil, nil, nil, nil], [:bodystmt, [:stmts_add, [:stmts_new], [:aref, [:method_add_arg, [:call, [:var_ref, [:@ivar, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]]], :".", [:@ident, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]]], [:arg_paren, nil]], [:args_add_block, [:args_add, [:args_new], [:@int, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]]], false]]], nil, nil, nil]]], nil, nil, nil]]]]

  [:program, [:stmts_add, [:stmts_new], [:class, [:const_ref, [:@const, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]]], nil, [:bodystmt, [:stmts_add, [:stmts_add, [:stmts_add, [:stmts_new], [:def, [:@ident, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]], [:paren, [:params, [[:@ident, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]]], nil, nil, nil, nil]], [:bodystmt, [:stmts_add, [:stmts_new], [:assign, [:var_field, [:@ivar, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]]], [:var_ref, [:@ident, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]]]]], nil, nil, nil]]], [:def, [:@ident, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]], [:params, nil, nil, nil, nil, nil], [:bodystmt, [:stmts_add, [:stmts_new], [:aref, [:method_add_arg, [:call, [:var_ref, [:@ivar, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]]], :".", [:@ident, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]]], [:arg_paren, nil]], [:args_add_block, [:args_add, [:args_new], [:@int, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]]], false]]], nil, nil, nil]]], [:def, [:@ident, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]], [:params, nil, nil, nil, nil, nil], [:bodystmt, [:stmts_add, [:stmts_new], [:aref, [:method_add_arg, [:call, [:var_ref, [:@ivar, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]]], :".", [:@ident, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]]], [:arg_paren, nil]], [:args_add_block, [:args_add, [:args_new], [:@int, :simplifies_to_string, [:simplifies_to_numeric, :simplifies_to_numeric]]], false]]], nil, nil, nil]]], nil, nil, nil]]]]

= Usage

  ./bin/scompare file1.rb file2.rb

= Examples

The following will tell the files have the same structure

  ./bin/scompare spec/samples/code1a.rb spec/samples/code1b.rb

But these ones will tell you they're different as the second file introduces a new method:

  ./bin/scompare spec/samples/code1a.rb spec/samples/code1c.rb
